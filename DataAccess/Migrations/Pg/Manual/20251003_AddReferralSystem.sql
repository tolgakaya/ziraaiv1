-- =====================================================
-- Referral System Migration
-- Date: 2025-10-03
-- Author: ZiraAI Development Team
-- Description: Adds complete referral system infrastructure
-- =====================================================

-- =====================================================
-- PART 1: CREATE NEW TABLES
-- =====================================================

-- Table 1: ReferralCodes
-- Stores referral codes generated by users
CREATE TABLE IF NOT EXISTS public."ReferralCodes" (
    "Id" SERIAL PRIMARY KEY,
    "UserId" INTEGER NOT NULL,
    "Code" VARCHAR(20) NOT NULL UNIQUE,
    "IsActive" BOOLEAN NOT NULL DEFAULT TRUE,
    "CreatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "ExpiresAt" TIMESTAMP NOT NULL,
    "Status" INTEGER NOT NULL DEFAULT 0,

    CONSTRAINT "FK_ReferralCodes_Users"
        FOREIGN KEY ("UserId")
        REFERENCES public."Users"("UserId")
        ON DELETE CASCADE
);

-- Indexes for ReferralCodes
CREATE INDEX "IX_ReferralCodes_UserId" ON public."ReferralCodes"("UserId");
CREATE INDEX "IX_ReferralCodes_Code" ON public."ReferralCodes"("Code");
CREATE INDEX "IX_ReferralCodes_ExpiresAt" ON public."ReferralCodes"("ExpiresAt");
CREATE INDEX "IX_ReferralCodes_Status" ON public."ReferralCodes"("Status");

-- Comments for ReferralCodes
COMMENT ON TABLE public."ReferralCodes" IS 'Stores user-generated referral codes with expiry tracking';
COMMENT ON COLUMN public."ReferralCodes"."Code" IS 'Unique referral code in format ZIRA-XXXXXX';
COMMENT ON COLUMN public."ReferralCodes"."Status" IS '0=Active, 1=Expired, 2=Disabled';


-- Table 2: ReferralTracking
-- Tracks the entire referral journey from click to reward
CREATE TABLE IF NOT EXISTS public."ReferralTracking" (
    "Id" SERIAL PRIMARY KEY,
    "ReferralCodeId" INTEGER NOT NULL,
    "RefereeUserId" INTEGER NULL,
    "ClickedAt" TIMESTAMP NULL,
    "RegisteredAt" TIMESTAMP NULL,
    "FirstAnalysisAt" TIMESTAMP NULL,
    "RewardProcessedAt" TIMESTAMP NULL,
    "Status" INTEGER NOT NULL DEFAULT 0,
    "RefereeMobilePhone" VARCHAR(15) NULL,
    "IpAddress" VARCHAR(45) NULL,
    "DeviceId" VARCHAR(255) NULL,
    "FailureReason" TEXT NULL,

    CONSTRAINT "FK_ReferralTracking_ReferralCodes"
        FOREIGN KEY ("ReferralCodeId")
        REFERENCES public."ReferralCodes"("Id")
        ON DELETE CASCADE,
    CONSTRAINT "FK_ReferralTracking_Users"
        FOREIGN KEY ("RefereeUserId")
        REFERENCES public."Users"("UserId")
        ON DELETE SET NULL
);

-- Indexes for ReferralTracking
CREATE INDEX "IX_ReferralTracking_ReferralCodeId" ON public."ReferralTracking"("ReferralCodeId");
CREATE INDEX "IX_ReferralTracking_RefereeUserId" ON public."ReferralTracking"("RefereeUserId");
CREATE INDEX "IX_ReferralTracking_Status" ON public."ReferralTracking"("Status");
CREATE INDEX "IX_ReferralTracking_DeviceId" ON public."ReferralTracking"("DeviceId");

-- Comments for ReferralTracking
COMMENT ON TABLE public."ReferralTracking" IS 'Tracks referral journey: Click → Register → Analysis → Reward';
COMMENT ON COLUMN public."ReferralTracking"."Status" IS '0=Clicked, 1=Registered, 2=Validated, 3=Rewarded';


-- Table 3: ReferralRewards
-- Stores awarded referral credits
CREATE TABLE IF NOT EXISTS public."ReferralRewards" (
    "Id" SERIAL PRIMARY KEY,
    "ReferralTrackingId" INTEGER NOT NULL,
    "ReferrerUserId" INTEGER NOT NULL,
    "RefereeUserId" INTEGER NOT NULL,
    "CreditAmount" INTEGER NOT NULL,
    "AwardedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "SubscriptionId" INTEGER NULL,
    "ExpiresAt" TIMESTAMP NULL,

    CONSTRAINT "FK_ReferralRewards_ReferralTracking"
        FOREIGN KEY ("ReferralTrackingId")
        REFERENCES public."ReferralTracking"("Id")
        ON DELETE CASCADE,
    CONSTRAINT "FK_ReferralRewards_ReferrerUsers"
        FOREIGN KEY ("ReferrerUserId")
        REFERENCES public."Users"("UserId")
        ON DELETE CASCADE,
    CONSTRAINT "FK_ReferralRewards_RefereeUsers"
        FOREIGN KEY ("RefereeUserId")
        REFERENCES public."Users"("UserId")
        ON DELETE CASCADE,
    CONSTRAINT "FK_ReferralRewards_Subscriptions"
        FOREIGN KEY ("SubscriptionId")
        REFERENCES public."UserSubscriptions"("Id")
        ON DELETE SET NULL
);

-- Indexes for ReferralRewards
CREATE INDEX "IX_ReferralRewards_ReferralTrackingId" ON public."ReferralRewards"("ReferralTrackingId");
CREATE INDEX "IX_ReferralRewards_ReferrerUserId" ON public."ReferralRewards"("ReferrerUserId");
CREATE INDEX "IX_ReferralRewards_RefereeUserId" ON public."ReferralRewards"("RefereeUserId");
CREATE INDEX "IX_ReferralRewards_AwardedAt" ON public."ReferralRewards"("AwardedAt");

-- Comments for ReferralRewards
COMMENT ON TABLE public."ReferralRewards" IS 'Records of awarded referral credits';
COMMENT ON COLUMN public."ReferralRewards"."CreditAmount" IS 'Number of analysis credits awarded (configurable, default: 10)';


-- Table 4: ReferralConfigurations
-- System-wide referral settings (configurable)
CREATE TABLE IF NOT EXISTS public."ReferralConfigurations" (
    "Id" SERIAL PRIMARY KEY,
    "Key" VARCHAR(100) NOT NULL UNIQUE,
    "Value" TEXT NOT NULL,
    "Description" TEXT NULL,
    "DataType" VARCHAR(20) NOT NULL DEFAULT 'string',
    "UpdatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "UpdatedBy" INTEGER NULL,

    CONSTRAINT "FK_ReferralConfigurations_Users"
        FOREIGN KEY ("UpdatedBy")
        REFERENCES public."Users"("UserId")
        ON DELETE SET NULL
);

-- Indexes for ReferralConfigurations
CREATE UNIQUE INDEX "IX_ReferralConfigurations_Key" ON public."ReferralConfigurations"("Key");

-- Comments for ReferralConfigurations
COMMENT ON TABLE public."ReferralConfigurations" IS 'Configurable system settings for referral program';
COMMENT ON COLUMN public."ReferralConfigurations"."DataType" IS 'int, bool, string, decimal';


-- =====================================================
-- PART 2: MODIFY EXISTING TABLES
-- =====================================================

-- Modify UserSubscriptions table: Add ReferralCredits column
ALTER TABLE public."UserSubscriptions"
    ADD COLUMN IF NOT EXISTS "ReferralCredits" INTEGER NOT NULL DEFAULT 0;

COMMENT ON COLUMN public."UserSubscriptions"."ReferralCredits" IS
    'Analysis credits earned through referrals, separate from subscription quota';

-- Create index for better query performance
CREATE INDEX IF NOT EXISTS "IX_UserSubscriptions_ReferralCredits"
    ON public."UserSubscriptions"("ReferralCredits");


-- Modify Users table: Add RegistrationReferralCode column
ALTER TABLE public."Users"
    ADD COLUMN IF NOT EXISTS "RegistrationReferralCode" VARCHAR(20) NULL;

COMMENT ON COLUMN public."Users"."RegistrationReferralCode" IS
    'Referral code used during registration (if any)';

-- Create index for tracking referrals
CREATE INDEX IF NOT EXISTS "IX_Users_RegistrationReferralCode"
    ON public."Users"("RegistrationReferralCode");


-- =====================================================
-- PART 3: INSERT DEFAULT CONFIGURATIONS
-- =====================================================

INSERT INTO public."ReferralConfigurations" ("Key", "Value", "Description", "DataType")
VALUES
    ('Referral.CreditPerReferral', '10', 'Number of analysis credits awarded per successful referral', 'int'),
    ('Referral.LinkExpiryDays', '30', 'Number of days before referral link expires', 'int'),
    ('Referral.MinAnalysisForValidation', '1', 'Minimum number of analyses new user must complete', 'int'),
    ('Referral.MaxReferralsPerUser', '0', 'Maximum referrals per user (0 = unlimited)', 'int'),
    ('Referral.EnableWhatsApp', 'true', 'Enable WhatsApp link sharing', 'bool'),
    ('Referral.EnableSMS', 'true', 'Enable SMS link sharing', 'bool'),
    ('Referral.CodePrefix', 'ZIRA', 'Prefix for referral codes', 'string'),
    ('Referral.DeepLinkBaseUrl', 'https://ziraai.com/ref/', 'Base URL for referral deep links', 'string')
ON CONFLICT ("Key") DO NOTHING;


-- =====================================================
-- PART 4: VERIFICATION QUERIES
-- =====================================================

-- Verify tables created
SELECT
    table_name,
    (SELECT COUNT(*)
     FROM information_schema.columns
     WHERE table_name = t.table_name
       AND table_schema = 'public') as column_count
FROM information_schema.tables t
WHERE table_schema = 'public'
  AND table_name IN ('ReferralCodes', 'ReferralTracking', 'ReferralRewards', 'ReferralConfigurations')
ORDER BY table_name;

-- Verify configurations inserted
SELECT "Key", "Value", "DataType"
FROM public."ReferralConfigurations"
ORDER BY "Key";

-- Verify column additions
SELECT
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns
WHERE table_schema = 'public'
  AND table_name = 'UserSubscriptions'
  AND column_name = 'ReferralCredits';

SELECT
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns
WHERE table_schema = 'public'
  AND table_name = 'Users'
  AND column_name = 'RegistrationReferralCode';


-- =====================================================
-- MIGRATION COMPLETE
-- =====================================================
-- Total Tables Created: 4
-- Total Tables Modified: 2
-- Total Indexes Created: 17
-- Total Configurations: 8
-- =====================================================
